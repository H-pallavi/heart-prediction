# -*- coding: utf-8 -*-
"""Heart disease prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c1VSyMKFSJpzjdg4TIiUziTjATAtxd2D
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import warnings
warnings.filterwarnings("ignore", category=DeprecationWarning)

df = pd.read_csv("/content/heart_disease_data.csv")

df.head()

df.tail()

df.shape

df.info()

df.isnull().sum()

df.describe()

df['target'].value_counts()

X = df.drop(columns='target',axis=1)
Y = df['target']

X

Y

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.4, stratify=Y, random_state=2)

X_train.shape

X_test.shape

Y_train.shape

Y_test.shape

model = LogisticRegression()

model.fit(X_train,Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print(f'This is the accuracy score on training data {training_data_accuracy}')

# accuracy on training data
X_test_prediction = model.predict(X_test)
testing_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print(f'This is the accuracy score on training data {testing_data_accuracy}')

# Building a model
# Input
target = (51,1,3,125,213,0,0,125,1,1,1.4,2,1,)
# Converting the input list to numpy array.
target = np.array(target)
print(target)
print(type(target))
target = target.reshape(1,-1)
target

prediction = model.predict(target)

if prediction[0] == 0 :
    print("Good News Patient does'nt have heart disease")
else:
    print("Oh! Patient should visit the doctor")